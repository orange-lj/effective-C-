  容器的成员函数优先于同名的算法.cpp
D:\effective c++\2021-12-19\容器的成员函数优先于同名的算法\容器的成员函数优先于同名的算法.cpp(15,16): error C2679: 二元“<<”: 没有找到接受“std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>”类型的右操作数的运算符(或没有可接受的转换)
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(464,39): message : 可能是“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::basic_streambuf<char,std::char_traits<char>> *)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(439,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(const void *)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(421,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(long double)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(403,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(double)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(385,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(float)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(367,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned __int64)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(349,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(__int64)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(331,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned long)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(313,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(long)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(294,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned int)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(268,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(int)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(249,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned short)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(215,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(short)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(197,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(bool)”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(192,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::ios_base &(__cdecl *)(std::ios_base &))”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(187,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::basic_ios<char,std::char_traits<char>> &(__cdecl *)(std::basic_ios<char,std::char_traits<char>> &))”
D:\vistual studio\IDE\VC\Tools\MSVC\14.30.30705\include\ostream(182,39): message : 或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::basic_ostream<char,std::char_traits<char>> &(__cdecl *)(std::basic_ostream<char,std::char_traits<char>> &))”
D:\effective c++\2021-12-19\容器的成员函数优先于同名的算法\容器的成员函数优先于同名的算法.cpp(15,16): message : 尝试匹配参数列表“(std::ostream, std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int>>>)”时
